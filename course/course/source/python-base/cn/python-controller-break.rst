Python break 和 continue 语句
======================================

简述
--------------------------
在 Python 中，break 和 continue 语句用于改变普通循环的流程。

通常情况下，循环遍历一段代码，直到判断条件为 False。但有时，可能会希望不检测判断条件就可以终止当前迭代，甚至是整个循环。这种情况下，就需要使用 break 和 continue 语句。

break 语句
----------------------------------
break 用于终止循环语句。即使循环条件不是 False 或者序列还没被完全递归完，也会终止。

**注意：** 如果 break 语句在嵌套循环内，break 将终止最内层循环。

语法格式：

::

    break


流程图：

.. image:: http://img.blog.csdn.net/20170416165752222

当我们陶醉在单曲循环的世界中时，突然一声：老师来啦，^_^以迅雷不及掩耳之势关闭歌曲吧：

::

    i = 0
    while i < 3:
        ^4$if i == 1:
            ^8$print('老师来啦')
            ^8$print('关闭歌曲')
            ^8$break

        ^4$print('正在播放：双节棍')
        ^4$i += 1

<button>Run ...</button>

运行程序，输出如下：

::

    正在播放：双节棍
    老师来啦
    关闭歌曲

continue 语句
--------------------------------
语法格式：

::

   continue


流程图：

.. image:: http://img.blog.csdn.net/20170416170554216

列表播放时，遇到不喜欢的歌曲经常会选择下一曲，直接跳过当前歌曲：

::

    songs = ['安静', '蜗牛', '稻香']
    # 通过索引遍历列表
    for i in range(len(songs)):
        ^4$if i == 1:
            ^8$print('不想听', songs[i])
            ^8$print('快进，下一曲')
            ^8$continue
        ^4$print("正在播放：", songs[i])

<button>Run ...</button>

运行程序，输出如下：

::

   正在播放： 安静
   不想听 蜗牛
   快进，下一曲
   正在播放： 稻香

遍历歌曲列表，当播放到“蜗牛”时，发现这首歌曲太煽情了，直接进入下一曲。

**两者的根本区别：** break 用于终止整个循环；continue 用于跳出本次循环，还会继续下一次循环。



作者 & 更新时间
------------------------------------
作者: `一去丶二三里 <http://blog.csdn.net/liang19890820>`_

提交: 2017/12/6
