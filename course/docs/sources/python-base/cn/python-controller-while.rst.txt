Python while 循环
============================

简述
---------------------------------
在 Python 中，while 循环用于遍历代码块，只要判断条件为 True，就会一直不停地循环执行。

通常，在事先不知道迭代次数的情况下使用 while 循环。

while 循环
---------------------------------
语法格式：

::

    while <判断条件>:
        ^4$<循环体>


进入 while 循环，首先检测判断条件，只有当其为 True 时，才会进入循环体。一次迭代后，再次检测判断条件，此过程一直持续到判断条件为 False。

和 for 循环一样，while 的循环体也通过缩进来确定。

流程图：

.. image:: http://img.blog.csdn.net/20170416154810480

如果说 for 循环是**顺序播放**，那 while 循环可以视为**单曲循环**。


::

    i = 0
    while i < 3:
        ^4$print('正在播放：双节棍')
        ^4$i += 1

<button>Run ...</button>

运行程序，输出如下：

::

    正在播放：双节棍
    正在播放：双节棍
    正在播放：双节棍

这里，只要计数器 i 小于 3（单曲循环 3 次），判断条件将为 True。

**注意**：要在循环体中增加计数器的值，这非常重要（很容易忽视），否则将导致无限循环。

while … else
---------------------------------
与 for 循环相同，在 while 循环中也可以有一个可选的 else 块。

如果 while 循环中的判断条件为 False，则 else 部分被执行。

**注意** ：while 循环可以用 break 语句终止，在这种情况下，else 部分被忽略。

::

    i = 0
    while i < 3:
        ^4$print('正在播放：双节棍')

        ^4$i += 1
    else:
        print('播放结束')

<button>Run ...</button>

运行程序，输出如下：

::
    正在播放：双节棍
    正在播放：双节棍
    正在播放：双节棍
    播放结束

可以看到，在第四次迭代中，while 中的条件变为 False。因此，else 部分被执行。



作者 & 更新时间
------------------------------------
作者: `一去丶二三里 <http://blog.csdn.net/liang19890820>`_

提交: 2017/12/6
